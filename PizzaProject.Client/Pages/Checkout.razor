@page "/checkout"
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
    <div class="main">
        <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
            <div class="checkout-cols">
                <div class="checkout-order-details">
                    <h4>Review order</h4>
                    <OrderReview Order="OrderState.Order" />
                </div>
            </div>

            <button class="checkout-button btn btn-warning" @onclick="PlaceOrder">Place order</button>
        </EditForm>
            <a href="checkout" class="btn btn-warning" disabled="@(OrderState.Order.Pizzas.Count == 0)"> Order ></a>
            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                <AddressEditor Address="@OrderState.Order.DeliveryAddress" />
            <DataAnnotationsValidator />
            </div>
    </div>
@code {
    async Task PlaceOrder()
    {
        var newOrderId = await HttpClient.PostJsonAsync<int>("orders", OrderState.Order);
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }
}
